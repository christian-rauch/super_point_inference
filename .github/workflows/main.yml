name: ROS workspace CI

on: [push, pull_request]

jobs:
  build:
    # test multiple Ubuntu and ROS distributions
    # https://github.com/ros-tooling/setup-ros#iterating-on-all-ros-distributions-for-all-platforms
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker_image: ubuntu:22.04
            cuda_distribution: ubuntu2204
            ros_distribution: humble
            ros_version: 2

          - docker_image: ubuntu:24.04
            cuda_distribution: ubuntu2404
            ros_distribution: jazzy
            ros_version: 2

    container:
      image: ${{ matrix.docker_image }}

    steps:
      - name: install core dependencies
        run: |
          apt update
          apt install --no-install-recommends -y ca-certificates gnupg wget software-properties-common

      - name: install CUDA
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/${{ matrix.cuda_distribution }}/x86_64/cuda-keyring_1.1-1_all.deb
          dpkg -i cuda-keyring_1.1-1_all.deb
          rm cuda-keyring_1.1-1_all.deb
          apt update
          apt install --no-install-recommends -y cuda-toolkit

      - uses: actions/checkout@v4

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7

      - name: ROS 1 CI Action
        if: ${{ matrix.ros_version == 1 }}
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: super_point_inference
          target-ros1-distro: ${{ matrix.ros_distribution }}
          vcs-repo-file-url: .github/dependencies.yaml

      - name: ROS 2 CI Action
        if: ${{ matrix.ros_version == 2 }}
        uses: ros-tooling/action-ros-ci@v0.4
        with:
          package-name: super_point_inference
          target-ros2-distro: ${{ matrix.ros_distribution }}
          vcs-repo-file-url: .github/dependencies.yaml
